name: compile assets

on:
  workflow_call:
    inputs:
      nodejs:
        type: string
        default: '20.x'
    secrets: 
      GPG_BOT:
        required: true
        description: bot gpg token
      GPG_PASSPHRASE:
        required: true
        description: bot gpg passphrase
      GPG_FINGERPRINT:
        required: true
        description: bot gpg fingerprint
      BOT_TOKEN:
        required: true
        description: bot token

jobs:
  compile:
    runs-on: ubuntu-latest

    env:
      NODE_ENV: production

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node ${{ inputs.nodejs }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.nodejs }}
          cache: npm

      - name: "install"
        run: npm ci --production

      - name: "build"
        run: npm run build
        env: 
          NODE_ENV: production

      - name: "Check if build has changed"
        if: success()
        id: has-changes
        run: |
          echo "stdout<<EOF" >> $GITHUB_OUTPUT
          echo "$(git diff  --stat)" >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: "git add"
        if: ${{ steps.has-changes.outputs.stdout }}
        run: git add --all

      - name: Import GPG key
        if: ${{ steps.has-changes.outputs.stdout }}
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_BOT }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          fingerprint: ${{ secrets.GPG_FINGERPRINT }}
          git_config_global: true
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_committer_name: Github bot
          git_committer_email: bot@babichev.net

      - name: "Commit files"
        if: ${{ steps.has-changes.outputs.stdout }}
        env:
          GH_TOKEN: ${{ secrets.BOT_TOKEN }}
        run: |
          gh pr checkout ${{ github.event.pull_request.number }}
          git commit -S -m "build action" -a

      - name: "Push changes"
        if: ${{ steps.has-changes.outputs.stdout }}
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
        run: git push -u origin HEAD
